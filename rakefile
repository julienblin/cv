
require 'pp'
require 'directory_watcher' if Gem.available?('directory_watcher')

require 'Sources/yaml_parser'
require 'Sources/html_transformer'
require 'net/ftp'

data_file = 'Data/cv.yml'
credentials_file = 'Data/credentials.yml'
output_base_dir = 'Output'

namespace :gems do

	desc "Install the required gem dependencies"
	task :install do
		`gem install haml` unless Gem.available?('haml')
		`gem install directory_watcher` unless Gem.available?('directory_watcher')
	end

end

desc "Outputs the result of the parser - userful for debugging"
task :test_parser do
	parser = YamlParser.new(data_file)
	pp parser.read.cv.to_yaml
end

desc "Generates the hmtl static files to upload to a website"
task :generate_static_html do
	parser = YamlParser.new(data_file)
	transformer = HtmlTransformer.new(parser.read.cv, output_base_dir + '/html')
	transformer.transform
end

desc "Watch the directory for file changes and relaunch generation"
task :watch do
	dw = DirectoryWatcher.new 'Data', :glob => '**/*'
	
	dw.add_observer {|*args| args.each {|event| puts event}}
	
	dw.start
	$stdin.gets
	dw.stop
end

desc "Upload html output to ftp account."
task :upload_html do
  credentials = YamlParser.new(credentials_file).read.credentials
  puts "Connecting to #{credentials.username}@#{credentials.server}..."
  ftp = Net::FTP.new
  ftp.connect(credentials.server, 21)
  if(ftp.login(credentials.username, credentials.password))
    puts "Connected. Moving to #{credentials.path}..."
    ftp.chdir(credentials.path)
    Dir.glob("#{output_base_dir}/html/*", File::FNM_DOTMATCH).each do |file|
      if ((file != "#{output_base_dir}/html/.") and (file != "#{output_base_dir}/html/.."))
        puts "Sending #{file}..."
        ftp.puttextfile(file)
      end
    end
    puts "Done."
  else
    puts "Connection error"
  end
end

task :default => [:generate_static_html]