
require 'pp'
require "builder" if Gem.available?('builder')

require 'Sources/yaml_parser'
require 'Sources/html_transformer'
require 'Sources/odt_transformer'
require 'net/ftp'

data_file = 'Data/cv.yml'
credentials_file = 'Data/credentials.yml'
output_base_dir = 'Output'

namespace :gems do

	desc "Install the required gem dependencies"
	task :install do
		sh "gem install haml" unless Gem.available?('haml')
		sh "gem install builder" unless Gem.available?('builder')
		sh "gem install serenity-odt -v 0.1.1" unless Gem.available?('serenity-odt')
	end

end

desc "Generates the odt files"
task :generate_odt do
	cv = YamlParser.new(data_file).read.cv
	credentials = YamlParser.new(credentials_file).read.credentials
	transformer = OdtTransformer.new(cv, output_base_dir + '/odt', credentials)
	transformer.transform
end

desc "Generates the hmtl static files to upload to a website"
task :generate_static_html do
	cv = YamlParser.new(data_file).read.cv
	credentials = YamlParser.new(credentials_file).read.credentials
	transformer = HtmlTransformer.new(cv, output_base_dir + '/html', credentials)
	transformer.transform
end

desc "Copy odt files in html output"
task :copy_odt_to_html do
  cv = YamlParser.new(data_file).read.cv
  langs = [:en, :fr]
	langs.each do |lang|
	  resources = YamlParser.new('Data/resources.yml').read.resources.send(lang)
    FileUtils.copy("Output/odt/#{resources.cv}-#{cv.name}.#{lang}.odt", output_base_dir + '/html')
  end
end

desc "Generates sitemap.xml in html output directory - based on html documents."
task :generate_sitemap do
  credentials = YamlParser.new(credentials_file).read.credentials

  puts "Generating #{output_base_dir}/html/sitemap.xml..."

  sitemap_file = File.open("#{output_base_dir}/html/sitemap.xml", "w+")
  xml_markup = Builder::XmlMarkup.new(:target => sitemap_file, :indent => 1)
  xml_markup.instruct! :xml, :version=>"1.0", :encoding=>"UTF-8"
  xml_markup.urlset :xmlns => "http://www.sitemaps.org/schemas/sitemap/0.9" do |urlset|
    Dir.glob("#{output_base_dir}/html/*.html").each do |file|
      urlset.url do |url|
        url.loc "#{credentials.server_base_url}/#{File.basename(file)}"
      end
    end
  end
  sitemap_file.close
end

desc "Upload html output to ftp account."
task :upload_html => :generate_sitemap do
  credentials = YamlParser.new(credentials_file).read.credentials
  puts "Connecting to #{credentials.username}@#{credentials.server}..."
  ftp = Net::FTP.new
  ftp.connect(credentials.server, 21)
  if(ftp.login(credentials.username, credentials.password))
    puts "Connected. Moving to #{credentials.path}..."
    ftp.chdir(credentials.path)
    Dir.glob("#{output_base_dir}/html/*", File::FNM_DOTMATCH).each do |file|
      if ((file != "#{output_base_dir}/html/.") and (file != "#{output_base_dir}/html/.."))
        extension = File.extname(file)
        if((extension == '.png') or (extension == '.odt'))
          puts "Sending binary file #{file}..."
          ftp.putbinaryfile(file)
        else  
          puts "Sending text file #{file}..."
          ftp.puttextfile(file)
        end
      end
    end
    puts "Done."
  else
    puts "Connection error"
  end
end

task :default => [:generate_odt, :generate_static_html, :copy_odt_to_html]